[metadata]
name = {{ cookiecutter.module_name }}
author = {{ cookiecutter.author_name }}
author_email = {{ cookiecutter.author_email }}
license = {{ cookiecutter.license }}
license_files = licenses/LICENSE.rst
url = {{ cookiecutter.project_url }}
description = {{ cookiecutter.short_description }}
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = {{ cookiecutter.edit_on_github_extension }}
github_project = {{ cookiecutter.github_project }}

[options]
zip_safe = False
packages = find:
python_requires = >={{ cookiecutter.minimum_python_version }}
setup_requires = setuptools_scm
{% if cookiecutter.required_dependencies -%}
install_requires =
{%- for req in cookiecutter.required_dependencies.split(',') %}
    {{ req.strip() }}{% endfor %}
{% endif -%}

{% if cookiecutter.include_example_code == 'y' %}
[options.entry_points]
console_scripts =
    astropy-package-template-example = packagename.example_mod:main
{%- endif %}

[options.extras_require]
{% if cookiecutter.optional_dependencies -%}
all =
{%- for req in cookiecutter.optional_dependencies.split(',') %}
    {{ req.strip() }}{% endfor %}
{% endif -%}
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
{{ cookiecutter.module_name }} = data/*

[tool:pytest]
testpaths = "{{ cookiecutter.module_name }}" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    {{ cookiecutter.module_name }}/_{{ cookiecutter._parent_project }}_init*
    {{ cookiecutter.module_name }}/conftest.py
    {{ cookiecutter.module_name }}/*setup_package*
    {{ cookiecutter.module_name }}/tests/*
    {{ cookiecutter.module_name }}/*/tests/*
    {{ cookiecutter.module_name }}/extern/*
    {{ cookiecutter.module_name }}/version*
    */{{ cookiecutter.module_name }}/_{{ cookiecutter._parent_project }}_init*
    */{{ cookiecutter.module_name }}/conftest.py
    */{{ cookiecutter.module_name }}/*setup_package*
    */{{ cookiecutter.module_name }}/tests/*
    */{{ cookiecutter.module_name }}/*/tests/*
    */{{ cookiecutter.module_name }}/extern/*
    */{{ cookiecutter.module_name }}/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
