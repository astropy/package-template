language: python

python:
    - 2.7
    - 3.4
    - 3.5
    - 3.6

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''

        # For this package-template, we include examples of Cython modules,
        # so Cython is required for testing. If your package does not include
        # Cython code, you can set CONDA_DEPENDENCIES=''
        - CONDA_DEPENDENCIES='Cython'

        # Conda packages for affiliated packages are hosted in channel
        # "astropy" while builds for astropy LTS with recent numpy versions
        # are in astropy-ci-extras. If your package uses either of these,
        # add the channels to CONDA_CHANNELS along with any other channels
        # you want to use.
        - CONDA_CHANNELS='astropy-ci-extras astropy'

        # If there are matplotlib or other GUI tests, uncomment the following
        # line to use the X virtual framebuffer.
        # - SETUP_XVFB=True

    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'
        # Try all python versions with the latest numpy
        - SETUP_CMD='test'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.3
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.4
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.5
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.6
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.8
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.9
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.11
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.1.12
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.6
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.7
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.8
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.9
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.11
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.12
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.13
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.2.15
      - python: 3.3
        env: SETUP_CMD='test' NUMPY_VERSION=1.9 CONDA_VERSION=4.3.4

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='packagename/tests/coveragerc'; fi
